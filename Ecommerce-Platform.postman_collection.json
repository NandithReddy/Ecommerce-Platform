{
  "info": {
    "name": "Ecommerce Platform API",
    "_postman_id": "ecommerce-platform-collection",
    "description": "Postman collection for the E-commerce Platform microservices (User, Product, Order). Uses collection variables for base URLs and stores JWT token and userId from login response.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "user_api",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "product_api",
      "value": "http://localhost:8081",
      "type": "string"
    },
    {
      "key": "order_api",
      "value": "http://localhost:8082",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "User Service",
      "item": [
        {
          "name": "Signup - Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"testuser@example.com\",\n  \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{user_api}}/api/auth/signup",
              "host": [
                "{{user_api}}"
              ],
              "path": [
                "api",
                "auth",
                "signup"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201 or 200', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
                  "});",
                  "try {",
                  "  var json = pm.response.json();",
                  "  var id = json.id || (json.user && (json.user.id || json.userId));",
                  "  if (id) pm.collectionVariables.set('userId', id.toString());",
                  "} catch(e) {}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login - Obtain JWT",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{user_api}}/api/auth/login",
              "host": [
                "{{user_api}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
                  "try {",
                  "  var json = pm.response.json();",
                  "  // common token fields: token, accessToken, jwt",
                  "  var token = json.token || json.accessToken || json.jwt || (json.data && (json.data.token || json.data.accessToken));",
                  "  if (token) pm.collectionVariables.set('token', token);",
                  "  // try to extract user id if present",
                  "  var id = json.userId || (json.user && (json.user.id || json.user.userId)) || (json.data && json.data.userId);",
                  "  if (id) pm.collectionVariables.set('userId', id.toString());",
                  "} catch(e) { }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Current User - /api/users/me",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{user_api}}/api/users/me",
              "host": [
                "{{user_api}}"
              ],
              "path": [
                "api",
                "users",
                "me"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Product Service",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{product_api}}/api/products",
              "host": [
                "{{product_api}}"
              ],
              "path": [
                "api",
                "products"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Product By ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{product_api}}/api/products/:productId",
              "host": [
                "{{product_api}}"
              ],
              "path": [
                "api",
                "products",
                ":productId"
              ],
              "variable": [
                {
                  "key": "productId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Product (example)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"4K UHD Monitor\",\n  \"description\": \"A beautiful 27-inch 4K monitor\",\n  \"price\": 399.99,\n  \"stock\": 10\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{product_api}}/api/products",
              "host": [
                "{{product_api}}"
              ],
              "path": [
                "api",
                "products"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Order Service",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 1\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{order_api}}/api/orders",
              "host": [
                "{{order_api}}"
              ],
              "path": [
                "api",
                "orders"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Orders By User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{order_api}}/api/orders/user/{{userId}}",
              "host": [
                "{{order_api}}"
              ],
              "path": [
                "api",
                "orders",
                "user",
                "{{userId}}"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ]
}

